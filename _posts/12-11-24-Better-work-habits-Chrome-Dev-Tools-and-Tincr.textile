---
layout: post
title: Better workflow habits, Chrome Dev Tools & Tincr
published: true
---

Chrome's Dev Tools are invaluable when debugging and fine-tuning JS and CSS. However, as my work has moved more and more to the frontend of projects, I have noticed how much I flip between the text editor and manually refreshing the page in my browser.

There has to be a better way...

Thankfully, there are number of options for automating the frontend development process.

h4. Chrome's Dev Tool's native features.

!(img-right)/img/save-css-in-chrome.png(save css in chrome)!

My antiquated workflow for css involved copying the new styling and switching back to my text editor to paste it into the CSS file. Besides being too manual, one catch with this technique is the risk of eagerly refreshing the page and losing the changes. With some poking around and experimentation I soon discovered Chrome provides a way to edit the CSS or JS and save directly to the source file (Chrome's Dev Tools are feature rich however I find their documentation lacking -- this feature wasn't obvious to me). When inspecting a file in the source tab, the secondary menu provides a way to save the file. Changes are seen immediately while you're building your page and they can easily be saved without leaving the browser.

Since there are a number of reasons for continuing to write the bulk of your code in your text editor (syntax highlighting, snippets, etc), Chrome's native CSS/JS source file saving only covers the debugging/fine-tuning phase of development.

h4. Enter Tincr.

<a href="http://tin.cr" target="_blank">Tincr</a>, a free Chrome extension, couples the cability of saving changes in the dev tools directly to the source file with the feature of refreshing the files in the browser after saving from another text editor.

Tincr is relatively easy to set up. Once you've installed it through the Chrome Web Store, follow its instructions for your corresponding project type.

*What if I'm using a compilation method a la <a href="http://sass-lang.com/" target="_blank">Sass</a> or <a href="http://coffeescript.org" target="_blank">Coffeescript</a>?*

Ahhhh, there in lies a problem. Having Tincr alter the CSS or JS source files won't work since they are rewritten by the compilers. Luckily for Sass, there is a way.... Using another chrome extension we can edit the Sass files directly while using Tincr to watch the CSS files and reload the page.

In my next post I'll show you how to hook up Chrome's Dev Tools and Tincr so they play nicely with Saas.

